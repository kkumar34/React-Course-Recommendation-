{"ast":null,"code":"class SearchAndFilter {\n  searchAndFilter(courses, searchList, subject, minimumCredits, maximumCredits) {\n    if (searchList.length !== 0) {\n      if (true) {\n        courses = method1(searchList, courses);\n      } else courses = method1(searchList, courses);\n    }\n\n    if (subject !== 'All') {\n      let coursesAfterSubject = [];\n\n      for (const course of Object.values(courses)) {\n        if (course.subject === subject) coursesAfterSubject.push(course);\n      }\n\n      courses = coursesAfterSubject;\n    }\n\n    if (minimumCredits !== '') {\n      let coursesAfterMinimumCredits = [];\n\n      for (const course of Object.values(courses)) {\n        if (course.credits >= parseInt(minimumCredits)) coursesAfterMinimumCredits.push(course);\n      }\n\n      courses = coursesAfterMinimumCredits;\n    }\n\n    if (maximumCredits !== '') {\n      let coursesAfterMaximumCredits = [];\n\n      for (const course of Object.values(courses)) {\n        if (course.credits <= parseInt(maximumCredits)) coursesAfterMaximumCredits.push(course);\n      }\n\n      courses = coursesAfterMaximumCredits;\n    }\n\n    return courses;\n  }\n\n  method1(searchList, courses) {\n    let coursesAfterSearch = [];\n    var counter = 0;\n\n    for (const course of Object.values(courses)) {\n      counter = 0;\n\n      for (const tag of searchList) {\n        for (const keyword of course.keywords) {\n          if (keyword.includes(tag)) {\n            counter = 1;\n          }\n        }\n      }\n\n      if (counter === 1) {\n        coursesAfterSearch.push(course);\n      }\n    }\n\n    return coursesAfterSearc;\n  }\n\n}\n\nexport default SearchAndFilter; // let coursesAfterSearch = [];\n//       var counter = 0;\n//         for(const course of Object.values(courses)) {\n//           counter = 0;\n//           for(const tag of searchList){\n//             for(const keyword of course.keywords) {\n//               if(keyword.includes(tag)) {\n//                 counter = 1;\n//               }\n//             }\n//           }\n//           if(counter === 1){\n//             coursesAfterSearch.push(course);\n//           }\n//         }","map":{"version":3,"sources":["/Users/kshitij/Desktop/CS-639/cs639-react-2-kkumar34-master/src/SearchAndFilter.js"],"names":["SearchAndFilter","searchAndFilter","courses","searchList","subject","minimumCredits","maximumCredits","length","method1","coursesAfterSubject","course","Object","values","push","coursesAfterMinimumCredits","credits","parseInt","coursesAfterMaximumCredits","coursesAfterSearch","counter","tag","keyword","keywords","includes","coursesAfterSearc"],"mappings":"AAAA,MAAMA,eAAN,CAAsB;AACpBC,EAAAA,eAAe,CAACC,OAAD,EAAUC,UAAV,EAAsBC,OAAtB,EAA+BC,cAA/B,EAA+CC,cAA/C,EAA+D;AAC5E,QAAGH,UAAU,CAACI,MAAX,KAAsB,CAAzB,EAA4B;AAC1B,UAAG,IAAH,EAAQ;AACNL,QAAAA,OAAO,GAAGM,OAAO,CAACL,UAAD,EAAaD,OAAb,CAAjB;AACD,OAFD,MAIAA,OAAO,GAAGM,OAAO,CAACL,UAAD,EAAaD,OAAb,CAAjB;AACD;;AAED,QAAGE,OAAO,KAAK,KAAf,EAAsB;AACpB,UAAIK,mBAAmB,GAAG,EAA1B;;AAEA,WAAI,MAAMC,MAAV,IAAoBC,MAAM,CAACC,MAAP,CAAcV,OAAd,CAApB,EAA4C;AAC1C,YAAGQ,MAAM,CAACN,OAAP,KAAmBA,OAAtB,EACEK,mBAAmB,CAACI,IAApB,CAAyBH,MAAzB;AACH;;AACDR,MAAAA,OAAO,GAAGO,mBAAV;AACD;;AAED,QAAGJ,cAAc,KAAK,EAAtB,EAA0B;AACxB,UAAIS,0BAA0B,GAAG,EAAjC;;AAEA,WAAI,MAAMJ,MAAV,IAAoBC,MAAM,CAACC,MAAP,CAAcV,OAAd,CAApB,EAA4C;AAC1C,YAAGQ,MAAM,CAACK,OAAP,IAAkBC,QAAQ,CAACX,cAAD,CAA7B,EACES,0BAA0B,CAACD,IAA3B,CAAgCH,MAAhC;AACH;;AACDR,MAAAA,OAAO,GAAGY,0BAAV;AACD;;AAED,QAAGR,cAAc,KAAK,EAAtB,EAA0B;AACxB,UAAIW,0BAA0B,GAAG,EAAjC;;AAEA,WAAI,MAAMP,MAAV,IAAoBC,MAAM,CAACC,MAAP,CAAcV,OAAd,CAApB,EAA4C;AAC1C,YAAGQ,MAAM,CAACK,OAAP,IAAkBC,QAAQ,CAACV,cAAD,CAA7B,EACEW,0BAA0B,CAACJ,IAA3B,CAAgCH,MAAhC;AACH;;AACDR,MAAAA,OAAO,GAAGe,0BAAV;AACD;;AAED,WAAOf,OAAP;AACD;;AAEDM,EAAAA,OAAO,CAACL,UAAD,EAAaD,OAAb,EAAqB;AAC1B,QAAIgB,kBAAkB,GAAG,EAAzB;AACA,QAAIC,OAAO,GAAG,CAAd;;AACA,SAAI,MAAMT,MAAV,IAAoBC,MAAM,CAACC,MAAP,CAAcV,OAAd,CAApB,EAA4C;AAC1CiB,MAAAA,OAAO,GAAG,CAAV;;AACA,WAAI,MAAMC,GAAV,IAAiBjB,UAAjB,EAA4B;AAC1B,aAAI,MAAMkB,OAAV,IAAqBX,MAAM,CAACY,QAA5B,EAAsC;AACpC,cAAGD,OAAO,CAACE,QAAR,CAAiBH,GAAjB,CAAH,EAA0B;AACxBD,YAAAA,OAAO,GAAG,CAAV;AACD;AACF;AACF;;AACD,UAAGA,OAAO,KAAK,CAAf,EAAiB;AACfD,QAAAA,kBAAkB,CAACL,IAAnB,CAAwBH,MAAxB;AACD;AACF;;AACD,WAAOc,iBAAP;AACD;;AA5DmB;;AA+DtB,eAAexB,eAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["class SearchAndFilter {\r\n  searchAndFilter(courses, searchList, subject, minimumCredits, maximumCredits) {\r\n    if(searchList.length !== 0) {\r\n      if(true){\r\n        courses = method1(searchList, courses);\r\n      }\r\n      else \r\n      courses = method1(searchList, courses);\r\n    }\r\n\r\n    if(subject !== 'All') {\r\n      let coursesAfterSubject = [];\r\n\r\n      for(const course of Object.values(courses)) {\r\n        if(course.subject === subject)\r\n          coursesAfterSubject.push(course)\r\n      }\r\n      courses = coursesAfterSubject;\r\n    }\r\n\r\n    if(minimumCredits !== '') {\r\n      let coursesAfterMinimumCredits = [];\r\n\r\n      for(const course of Object.values(courses)) {\r\n        if(course.credits >= parseInt(minimumCredits))\r\n          coursesAfterMinimumCredits.push(course);\r\n      }\r\n      courses = coursesAfterMinimumCredits;\r\n    }\r\n\r\n    if(maximumCredits !== '') {\r\n      let coursesAfterMaximumCredits = [];\r\n\r\n      for(const course of Object.values(courses)) {\r\n        if(course.credits <= parseInt(maximumCredits))\r\n          coursesAfterMaximumCredits.push(course);\r\n      }\r\n      courses = coursesAfterMaximumCredits;\r\n    }\r\n\r\n    return courses;\r\n  }\r\n\r\n  method1(searchList, courses){\r\n    let coursesAfterSearch = [];\r\n    var counter = 0;\r\n    for(const course of Object.values(courses)) {\r\n      counter = 0;\r\n      for(const tag of searchList){\r\n        for(const keyword of course.keywords) {\r\n          if(keyword.includes(tag)) {\r\n            counter = 1;\r\n          }\r\n        }\r\n      }\r\n      if(counter === 1){\r\n        coursesAfterSearch.push(course);\r\n      }\r\n    }\r\n    return coursesAfterSearc\r\n  }\r\n}\r\n\r\nexport default SearchAndFilter;\r\n\r\n\r\n\r\n// let coursesAfterSearch = [];\r\n//       var counter = 0;\r\n//         for(const course of Object.values(courses)) {\r\n//           counter = 0;\r\n//           for(const tag of searchList){\r\n//             for(const keyword of course.keywords) {\r\n//               if(keyword.includes(tag)) {\r\n//                 counter = 1;\r\n//               }\r\n//             }\r\n//           }\r\n//           if(counter === 1){\r\n//             coursesAfterSearch.push(course);\r\n//           }\r\n//         }"]},"metadata":{},"sourceType":"module"}