{"ast":null,"code":"var _jsxFileName = \"/Users/kshitij/Desktop/CS-639/React 3/src/Recommender.js\";\nimport React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport Button from 'react-bootstrap/Button';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\n\nclass Recommender extends React.Component {\n  constructor(props) {\n    super(props);\n    this.input = React.createRef();\n    this.state = {\n      allCourses: this.props.aCourses,\n      likedCourses: this.props.rCourses,\n      chips: [],\n      likedKeys: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: 'calc(20vw - 5px)',\n        marginLeft: '5px',\n        height: 'calc(100vh - 10px)',\n        position: 'fixed'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Interest Areas\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formSubject\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Enter Keywords\"), React.createElement(Form.Control, {\n      as: \"select\",\n      ref: this.input,\n      onClick: () => this.setCourses(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.getIntListWords())), React.createElement(Form.Group, {\n      controlId: \"formSubject\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Subject\"), React.createElement(Form.Control, {\n      as: \"select\",\n      ref: this.input,\n      onClick: () => this.setCourses(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.getSubjectOptions()))), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.getTags()))), React.createElement(Card, {\n      style: {\n        width: 'calc(20vw - 5px)',\n        marginLeft: '20vw',\n        height: 'calc(100vh - 10px)',\n        position: 'fixed'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(ButtonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(ToggleButtonGroup, {\n      type: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.getIntListWords()))));\n  } // all keywords to select from\n\n\n  getIntListWords() {\n    var temp = [];\n    console.log(this.props.iList);\n    console.log(this.state.intList);\n\n    for (const word of this.state.intList) {\n      temp.push(React.createElement(ToggleButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, word));\n    }\n\n    return temp;\n  } // Keywords that are from liked courses\n\n\n  getLikedWOrds() {\n    var tempLiked = this.state.likedKeys;\n\n    for (const course of this.state.likedCourses) {\n      for (const eKey of course.keywords) {\n        if (tempLiked.indexOf(eKey) === -1) {\n          tempLiked.push(eKey);\n        }\n      }\n    }\n\n    this.setState({\n      likedKeys: tempLiked\n    });\n  } // keywords entered by the user\n\n\n  getTags() {\n    var newSearchList = this.state.chips;\n    var tags = [];\n\n    for (const tag of newSearchList) {\n      console.log(tag);\n      tags.push(React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, tag, \" \", React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => this.removeTag(tag),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"X\")));\n    }\n\n    return tags;\n  } // remove keywords entered by the user\n\n\n  removeTag(rTag) {\n    var newSearchList = this.state.chips;\n\n    for (const tag of newSearchList) {\n      if (tag === rTag) {\n        newSearchList.splice(newSearchList.indexOf(tag), 1);\n      }\n    }\n\n    this.setState({\n      chips: newSearchList\n    });\n    this.props.setCourses(this.searchAndFilter.searchAndFilter(this.props.courses, newSearchList, this.subject.current.value, this.minimumCredits.current.value, this.maximumCredits.current.value, this.state.buttonValue));\n  }\n\n  getSubjectOptions() {\n    let subjectOptions = [];\n\n    for (const subject of this.state.subjects) {\n      subjectOptions.push(React.createElement(\"option\", {\n        key: subject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, subject));\n    }\n\n    return subjectOptions;\n  }\n\n}\n\nexport default Recommender;","map":{"version":3,"sources":["/Users/kshitij/Desktop/CS-639/React 3/src/Recommender.js"],"names":["React","Card","Form","ListGroup","ListGroupItem","Button","ToggleButton","ToggleButtonGroup","ButtonToolbar","Recommender","Component","constructor","props","input","createRef","state","allCourses","aCourses","likedCourses","rCourses","chips","likedKeys","render","width","marginLeft","height","position","setCourses","getIntListWords","getSubjectOptions","getTags","temp","console","log","iList","intList","word","push","getLikedWOrds","tempLiked","course","eKey","keywords","indexOf","setState","newSearchList","tags","tag","removeTag","rTag","splice","searchAndFilter","courses","subject","current","value","minimumCredits","maximumCredits","buttonValue","subjectOptions","subjects"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport Button from 'react-bootstrap/Button';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\n\n\nclass Recommender extends React.Component {\n    constructor(props) {\n        super(props);\n        this.input = React.createRef();\n        this.state = {\n            allCourses: this.props.aCourses,\n            likedCourses: this.props.rCourses,\n            chips: [],\n            likedKeys:[]\n        };\n    }\n    render() {\n        return(\n            <div>\n                <Card style={{width: 'calc(20vw - 5px)', marginLeft: '5px', height: 'calc(100vh - 10px)', position: 'fixed'}}>\n                    <Card.Body>\n                        <Card.Title>Interest Areas</Card.Title>\n                        <Form>\n                        <Form.Group controlId=\"formSubject\">\n                            <Form.Label>Enter Keywords</Form.Label>\n                            <Form.Control as=\"select\" ref={this.input} onClick={() => this.setCourses()}>\n                            {this.getIntListWords()}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"formSubject\">\n                            <Form.Label>Subject</Form.Label>\n                            <Form.Control as=\"select\" ref={this.input} onClick={() => this.setCourses()}>\n                            {this.getSubjectOptions()}\n                            </Form.Control>\n                        </Form.Group>\n                        </Form>\n                        <ListGroup>{this.getTags()}</ListGroup>\n                    </Card.Body>\n                </Card>\n                <Card style={{width: 'calc(20vw - 5px)', marginLeft: '20vw', height: 'calc(100vh - 10px)', position: 'fixed'}}>\n                    <ButtonToolbar>\n                        <ToggleButtonGroup type=\"checkbox\">\n                            {this.getIntListWords()}\n                        </ToggleButtonGroup>\n                    </ButtonToolbar>\n                </Card>\n            </div>\n        )\n    }\n\n    // all keywords to select from\n    getIntListWords(){\n        var temp = [];\n        console.log(this.props.iList);\n        console.log(this.state.intList);\n        for(const word of this.state.intList){\n            temp.push(\n                <ToggleButton>{word}</ToggleButton>\n            )\n        }\n        return temp;\n    }\n\n    // Keywords that are from liked courses\n    getLikedWOrds(){\n        var tempLiked = this.state.likedKeys;\n        for(const course of this.state.likedCourses){\n            for(const eKey of course.keywords){\n                if(tempLiked.indexOf(eKey) === -1){\n                    tempLiked.push(eKey);\n                }\n            }\n        }\n        this.setState({likedKeys: tempLiked});\n    }\n\n    // keywords entered by the user\n    getTags(){\n        var newSearchList = this.state.chips;\n        var tags = [];\n        for(const tag of newSearchList){\n          console.log(tag);\n          tags.push(\n              <ListGroup.Item>{tag} <Button variant=\"primary\" onClick={()=>this.removeTag(tag)}>X</Button></ListGroup.Item>\n          )\n        }\n        return tags;\n    }\n\n    // remove keywords entered by the user\n    removeTag(rTag){\n        var newSearchList = this.state.chips;\n        for(const tag of newSearchList){\n          if(tag === rTag){\n            newSearchList.splice(newSearchList.indexOf(tag), 1);\n          }\n        }\n        this.setState({chips: newSearchList})\n        this.props.setCourses(this.searchAndFilter.searchAndFilter(this.props.courses, newSearchList, this.subject.current.value, this.minimumCredits.current.value, this.maximumCredits.current.value, this.state.buttonValue));\n    }\n\n    getSubjectOptions() {\n        let subjectOptions = [];\n        for(const subject of this.state.subjects) {\n          subjectOptions.push(<option key={subject}>{subject}</option>);\n        }\n        return subjectOptions;\n    }\n\n\n}\n\nexport default Recommender;"]},"metadata":{},"sourceType":"module"}