{"ast":null,"code":"class SearchAndFilter {\n  searchAndFilter(courses, searchList, subject, minimumCredits, maximumCredits, buttonValue) {\n    if (searchList.length !== 0) {\n      if (buttonValue === 1) {\n        courses = this.method1(searchList, courses);\n      } else {\n        courses = this.method2(searchList, courses);\n      }\n    }\n\n    if (subject !== 'All') {\n      let coursesAfterSubject = [];\n\n      for (const course of Object.values(courses)) {\n        if (course.subject === subject) coursesAfterSubject.push(course);\n      }\n\n      courses = coursesAfterSubject;\n    }\n\n    if (minimumCredits !== '') {\n      let coursesAfterMinimumCredits = [];\n\n      for (const course of Object.values(courses)) {\n        if (course.credits >= parseInt(minimumCredits)) coursesAfterMinimumCredits.push(course);\n      }\n\n      courses = coursesAfterMinimumCredits;\n    }\n\n    if (maximumCredits !== '') {\n      let coursesAfterMaximumCredits = [];\n\n      for (const course of Object.values(courses)) {\n        if (course.credits <= parseInt(maximumCredits)) coursesAfterMaximumCredits.push(course);\n      }\n\n      courses = coursesAfterMaximumCredits;\n    }\n\n    return courses;\n  }\n\n  method1(searchList, courses) {\n    let coursesAfterSearch = [];\n    var counter = 0;\n\n    for (const course of Object.values(courses)) {\n      counter = 0;\n\n      for (const tag of searchList) {\n        for (const keyword of course.keywords) {\n          if (keyword.includes(tag)) {\n            counter = 1;\n          }\n        }\n\n        if (counter2 === 1) {}\n      }\n\n      if (counter === 1) {\n        coursesAfterSearch.push(course);\n      }\n    }\n\n    return coursesAfterSearch;\n  }\n\n  method2(searchList, courses) {\n    let coursesAfterSearch = [];\n    var counter = 0;\n\n    for (const course of Object.values(courses)) {\n      counter = 0;\n\n      for (const tag of searchList) {\n        for (const keyword of course.keywords) {\n          if (keyword.includes(tag)) {\n            counter = 1;\n          }\n        }\n      }\n\n      if (counter === 1) {\n        coursesAfterSearch.push(course);\n      }\n    }\n\n    return coursesAfterSearch;\n  }\n\n}\n\nexport default SearchAndFilter;","map":{"version":3,"sources":["/Users/kshitij/Desktop/CS-639/cs639-react-2-kkumar34-master/src/SearchAndFilter.js"],"names":["SearchAndFilter","searchAndFilter","courses","searchList","subject","minimumCredits","maximumCredits","buttonValue","length","method1","method2","coursesAfterSubject","course","Object","values","push","coursesAfterMinimumCredits","credits","parseInt","coursesAfterMaximumCredits","coursesAfterSearch","counter","tag","keyword","keywords","includes","counter2"],"mappings":"AAAA,MAAMA,eAAN,CAAsB;AACpBC,EAAAA,eAAe,CAACC,OAAD,EAAUC,UAAV,EAAsBC,OAAtB,EAA+BC,cAA/B,EAA+CC,cAA/C,EAA+DC,WAA/D,EAA4E;AACzF,QAAGJ,UAAU,CAACK,MAAX,KAAsB,CAAzB,EAA4B;AAC1B,UAAGD,WAAW,KAAK,CAAnB,EAAqB;AACnBL,QAAAA,OAAO,GAAG,KAAKO,OAAL,CAAaN,UAAb,EAAyBD,OAAzB,CAAV;AACD,OAFD,MAGI;AACFA,QAAAA,OAAO,GAAG,KAAKQ,OAAL,CAAaP,UAAb,EAAyBD,OAAzB,CAAV;AACD;AACF;;AAED,QAAGE,OAAO,KAAK,KAAf,EAAsB;AACpB,UAAIO,mBAAmB,GAAG,EAA1B;;AAEA,WAAI,MAAMC,MAAV,IAAoBC,MAAM,CAACC,MAAP,CAAcZ,OAAd,CAApB,EAA4C;AAC1C,YAAGU,MAAM,CAACR,OAAP,KAAmBA,OAAtB,EACEO,mBAAmB,CAACI,IAApB,CAAyBH,MAAzB;AACH;;AACDV,MAAAA,OAAO,GAAGS,mBAAV;AACD;;AAED,QAAGN,cAAc,KAAK,EAAtB,EAA0B;AACxB,UAAIW,0BAA0B,GAAG,EAAjC;;AAEA,WAAI,MAAMJ,MAAV,IAAoBC,MAAM,CAACC,MAAP,CAAcZ,OAAd,CAApB,EAA4C;AAC1C,YAAGU,MAAM,CAACK,OAAP,IAAkBC,QAAQ,CAACb,cAAD,CAA7B,EACEW,0BAA0B,CAACD,IAA3B,CAAgCH,MAAhC;AACH;;AACDV,MAAAA,OAAO,GAAGc,0BAAV;AACD;;AAED,QAAGV,cAAc,KAAK,EAAtB,EAA0B;AACxB,UAAIa,0BAA0B,GAAG,EAAjC;;AAEA,WAAI,MAAMP,MAAV,IAAoBC,MAAM,CAACC,MAAP,CAAcZ,OAAd,CAApB,EAA4C;AAC1C,YAAGU,MAAM,CAACK,OAAP,IAAkBC,QAAQ,CAACZ,cAAD,CAA7B,EACEa,0BAA0B,CAACJ,IAA3B,CAAgCH,MAAhC;AACH;;AACDV,MAAAA,OAAO,GAAGiB,0BAAV;AACD;;AAED,WAAOjB,OAAP;AACD;;AAEDO,EAAAA,OAAO,CAACN,UAAD,EAAaD,OAAb,EAAqB;AAC1B,QAAIkB,kBAAkB,GAAG,EAAzB;AACA,QAAIC,OAAO,GAAG,CAAd;;AACA,SAAI,MAAMT,MAAV,IAAoBC,MAAM,CAACC,MAAP,CAAcZ,OAAd,CAApB,EAA4C;AAC1CmB,MAAAA,OAAO,GAAG,CAAV;;AACA,WAAI,MAAMC,GAAV,IAAiBnB,UAAjB,EAA4B;AAC1B,aAAI,MAAMoB,OAAV,IAAqBX,MAAM,CAACY,QAA5B,EAAsC;AACpC,cAAGD,OAAO,CAACE,QAAR,CAAiBH,GAAjB,CAAH,EAA0B;AACxBD,YAAAA,OAAO,GAAG,CAAV;AACD;AACF;;AACD,YAAGK,QAAQ,KAAK,CAAhB,EAAkB,CAEjB;AACF;;AACD,UAAGL,OAAO,KAAK,CAAf,EAAiB;AACfD,QAAAA,kBAAkB,CAACL,IAAnB,CAAwBH,MAAxB;AACD;AACF;;AACD,WAAOQ,kBAAP;AACD;;AAEDV,EAAAA,OAAO,CAACP,UAAD,EAAaD,OAAb,EAAqB;AAC1B,QAAIkB,kBAAkB,GAAG,EAAzB;AACA,QAAIC,OAAO,GAAG,CAAd;;AACA,SAAI,MAAMT,MAAV,IAAoBC,MAAM,CAACC,MAAP,CAAcZ,OAAd,CAApB,EAA4C;AAC1CmB,MAAAA,OAAO,GAAG,CAAV;;AACA,WAAI,MAAMC,GAAV,IAAiBnB,UAAjB,EAA4B;AAC1B,aAAI,MAAMoB,OAAV,IAAqBX,MAAM,CAACY,QAA5B,EAAsC;AACpC,cAAGD,OAAO,CAACE,QAAR,CAAiBH,GAAjB,CAAH,EAA0B;AACxBD,YAAAA,OAAO,GAAG,CAAV;AACD;AACF;AACF;;AACD,UAAGA,OAAO,KAAK,CAAf,EAAiB;AACfD,QAAAA,kBAAkB,CAACL,IAAnB,CAAwBH,MAAxB;AACD;AACF;;AACD,WAAOQ,kBAAP;AACD;;AAnFmB;;AAsFtB,eAAepB,eAAf","sourcesContent":["class SearchAndFilter {\r\n  searchAndFilter(courses, searchList, subject, minimumCredits, maximumCredits, buttonValue) {\r\n    if(searchList.length !== 0) {\r\n      if(buttonValue === 1){\r\n        courses = this.method1(searchList, courses);\r\n      }\r\n      else{\r\n        courses = this.method2(searchList, courses);\r\n      }\r\n    }\r\n\r\n    if(subject !== 'All') {\r\n      let coursesAfterSubject = [];\r\n\r\n      for(const course of Object.values(courses)) {\r\n        if(course.subject === subject)\r\n          coursesAfterSubject.push(course)\r\n      }\r\n      courses = coursesAfterSubject;\r\n    }\r\n\r\n    if(minimumCredits !== '') {\r\n      let coursesAfterMinimumCredits = [];\r\n\r\n      for(const course of Object.values(courses)) {\r\n        if(course.credits >= parseInt(minimumCredits))\r\n          coursesAfterMinimumCredits.push(course);\r\n      }\r\n      courses = coursesAfterMinimumCredits;\r\n    }\r\n\r\n    if(maximumCredits !== '') {\r\n      let coursesAfterMaximumCredits = [];\r\n\r\n      for(const course of Object.values(courses)) {\r\n        if(course.credits <= parseInt(maximumCredits))\r\n          coursesAfterMaximumCredits.push(course);\r\n      }\r\n      courses = coursesAfterMaximumCredits;\r\n    }\r\n\r\n    return courses;\r\n  }\r\n\r\n  method1(searchList, courses){\r\n    let coursesAfterSearch = [];\r\n    var counter = 0;\r\n    for(const course of Object.values(courses)) {\r\n      counter = 0;\r\n      for(const tag of searchList){\r\n        for(const keyword of course.keywords) {\r\n          if(keyword.includes(tag)) {\r\n            counter = 1;\r\n          }\r\n        }\r\n        if(counter2 === 1){\r\n\r\n        }\r\n      }\r\n      if(counter === 1){\r\n        coursesAfterSearch.push(course);\r\n      }\r\n    }\r\n    return coursesAfterSearch\r\n  }\r\n\r\n  method2(searchList, courses){\r\n    let coursesAfterSearch = [];\r\n    var counter = 0;\r\n    for(const course of Object.values(courses)) {\r\n      counter = 0;\r\n      for(const tag of searchList){\r\n        for(const keyword of course.keywords) {\r\n          if(keyword.includes(tag)) {\r\n            counter = 1;\r\n          }\r\n        }\r\n      }\r\n      if(counter === 1){\r\n        coursesAfterSearch.push(course);\r\n      }\r\n    }\r\n    return coursesAfterSearch\r\n  }\r\n}\r\n\r\nexport default SearchAndFilter;"]},"metadata":{},"sourceType":"module"}